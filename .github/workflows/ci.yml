name: Deploy performance test to AWS distribute load test

on:
  workflow_dispatch:

#     paths-ignore:
#       - '.github/**'
jobs:
  deploy:
    name: Build and deploy on AWS
    runs-on: ubuntu-latest
    
    steps:
      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1
        
      - name: Checkout
        uses: actions/checkout@v3
                
      - name: Check .jmx file existence 
        id: file-existance
        run: |
          test -e /home/runner/work/performance_test/performance_test/jmeter/RickAndMorthyAPI.jmx && export JMX_FILE="true" || export JMX_FILE="false"
          if ! [[ ${JMX_FILE} ]] ; 
          then 
            echo "you shouldn't get here..."
            exit 1
          fi   

      - name: Create Config File and deploy test to distributed load test
        run: |
          export BRANCH_NAME=$(echo $GITHUB_SHA | cut -d'/' -f 8)
          export SCRIPT_NAME="${BRANCH_NAME}.jmx"

          cd jmeter
          mv RickAndMorthyAPI.jmx $SCRIPT_NAME

          aws s3 cp ./$SCRIPT_NAME s3://distributed-loadt-test-dlttestrunnerstoragedltsce-h6q4dml6oxjh/public/test-scenarios/jmeter/
          
          sleep 2

          cat template.json \
          | jq ".testId |= \"$BRANCH_NAME\"" \
          | jq ".testName |= \"$BRANCH_NAME\"" \
          | jq ".testScenario.scenarios.CIPipeline.script |= \"RickAndMorthyAPI.jmx\"" >> config.json
          cat config.json

          aws apigateway test-invoke-method --rest-api-id j7j4l7kyr6 --resource-id mm7o31 --http-method POST --path-with-query-string '/scenarios' --body file://config.json



      # - name: Deploy and run test into AWS distributed load test 
      #   run: |
      #     aws apigateway test-invoke-method --rest-api-id j7j4l7kyr6 --resource-id mm7o31 --http-method POST --path-with-query-string '/scenarios' --body file://config.json