name: Deploy load test to AWS distribute load test

on:
  workflow_dispatch:
  push:
    branches:
      - stg
      - dev

#     paths-ignore:
#       - '.github/**'
jobs:
  deploy:
    name: Build and deploy on AWS
    runs-on: ubuntu-latest
    
    steps:
      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1
        
      - name: Checkout
        uses: actions/checkout@v2
                
      - name: Check files existence 
        id: file-existance
        run: |
          pwd
          test -e /home/runner/work/performance_test/jmeter/RickAndMorthyAPI.jmx && export JMX_FILE="true" || export JMX_FILE="false"
          echo $JMX_FILE
          if [[ ${JMX_FILE} ]] ; then exit 1;
      #   #  test -e ./ci/bot_1000.csv && export CSV_FILE="true" || export CSV_FILE="false"

      # - name: Create Config File
      #   run: |
      #     export BRANCH_NAME=$(echo $GITHUB_SHA)
      #     export SCRIPT_NAME="${BRANCH_NAME}.jmx"
      #     cat template.json \
      #     | jq ".testId |= \"$BRANCH_NAME\"" \
      #     | jq ".testName |= \"$BRANCH_NAME\""  \
      #     | jq ".testScenario.scenarios.CIPipeline.script |= \"$SCRIPT_NAME\"" >> config.json
      #     cat template.json
      #     cat config.json

      # - name: Create ZIP and upload it to s3
      #   run: |
      #     export BRANCH_NAME=$(echo $GITHUB_SHA)
      #     export ZIP_NAME="${BRANCH_NAME}.zip"
      #     cd ci
      #     zip -r $BRANCH_NAME .        
      #     aws s3 cp ./$ZIP_NAME s3://distributed-loadt-test-dlttestrunnerstoragedltsce-h6q4dml6oxjh/public/test-scenarios/jmeter/
      
      # - name: Deploy and run test into AWS distributed load test 
      #   run: |
      #     aws apigateway test-invoke-method --rest-api-id j7j4l7kyr6 --resource-id mm7o31 --http-method POST --path-with-query-string '/scenarios' --body file://config.json